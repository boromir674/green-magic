[tox]
envlist = clean,check,py37-cov,report

[testenv]
basepython = {clean,check,report,graphs}: {env:TOXPYTHON:python3}
deps =
    -rrequirements/base.txt
    -rrequirements/dev.txt
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHOUNBUFFERED=yes
    PIP_DISABLE_PIP_VERSION_CHECK=1
    VIRTUALENV_NO_DOWNLOAD=0
    BUILD_ARTIFACTS_DIR={toxinidir}/build-artifacts
passenv =
    *
    # See https://github.com/codecov/codecov-python/blob/5b9d539a6a09bc84501b381b563956295478651a/README.md#using-tox
    codecov: TOXENV
    codecov: CI
    codecov: TRAVIS TRAVIS_*
commands = python -m pytest tests --cov --cov-report=term-missing -v
;    {posargs:pytest --ignore=src --cov --cov-report=term-missing -vv}
;    pytest --cov --cov-report=term-missing

###### MAIN ######
[testenv:py35-cov]
basepython = {env:TOXPYTHON:python3.5}
;use_develop = true
commands_pre = python -c 'import nltk; nltk.download("stopwords"); nltk.download("punkt"); nltk.download("wordnet")'

[testenv:py36-cov]
basepython = {env:TOXPYTHON:python3.6}
use_develop = true
commands_pre = python -c 'import nltk; nltk.download("stopwords"); nltk.download("punkt"); nltk.download("wordnet")'

[testenv:py37-cov]
basepython = {env:TOXPYTHON:python3.7}
;use_develop = true
commands_pre = python -c 'import nltk; nltk.download("stopwords"); nltk.download("punkt"); nltk.download("wordnet")'

[testenv:py38-cov]
basepython = {env:TOXPYTHON:python3.8}
use_develop = true
commands_pre = python -c 'import nltk; nltk.download("stopwords"); nltk.download("punkt"); nltk.download("wordnet")'


[testenv:py36]
basepython = {env:TOXPYTHON:python3.6}
use_develop = true
commands_pre = python -c 'import nltk; nltk.download("stopwords"); nltk.download("punkt"); nltk.download("wordnet")'
commands = python -m pytest -vv

[testenv:py37]
basepython = {env:TOXPYTHON:python3.7}
use_develop = true
commands_pre = python -c 'import nltk; nltk.download("stopwords"); nltk.download("punkt"); nltk.download("wordnet")'
commands = {posargs:python -m pytest -vv}


###### SUPPORT ######
[testenv:clean]
deps = coverage
skip_install = True
commands = coverage erase

[testenv:check]
deps =
    docutils
    readme-renderer
    pygments
    check-manifest
skip_install = True
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest


[testenv:report]
deps = coverage
skip_install = True
commands = coverage report

[testenv:graphs]
deps = pydeps
skip_install = True
passenv = HOME
commands_pre = python ./scripts/create-dir.py {env:BUILD_ARTIFACTS_DIR}
commands =
    pydeps src/green_magic/strain --max-bacon=8 --noshow -o {env:BUILD_ARTIFACTS_DIR}/green_magic.strain3.svg
