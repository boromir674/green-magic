[tox]
envlist = spell,docs
skip_missing_interpreters = true


[testenv]
basepython = {clean,report,codecov,graphs,quickstart,spell,docs,deploy-final}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHOUNBUFFERED=yes
    PIP_DISABLE_PIP_VERSION_CHECK=1
    VIRTUALENV_NO_DOWNLOAD=0
    BUILD_ARTIFACTS_DIR={toxinidir}/build-artifacts
    CURRENT_PACKAGE_VERSION=0.3.16
passenv =
    *
    # See https://github.com/codecov/codecov-python/blob/5b9d539a6a09bc84501b381b563956295478651a/README.md#using-tox
    codecov: TOXENV
    codecov: CI
    codecov: TRAVIS TRAVIS_*
skip_install = true


############## DOCS ##############
[docs-base]
deps =
    setuptools >= 40.0.0
    -rrequirements/docs.txt

[testenv:quickstart]
description = initialize the sphinx-docs infrastructure, once upon new project creation
changedir = docs
use_develop = true
deps = {[docs-base]deps}
commands = sphinx-quickstart

[testenv:spell]
# requires the pyenchant C library (ie on Linux: sudo apt-get install python-pyenchant)
description = do spell checking on docs; command is allowed to fail
setenv =
    SPELLCHECK=1
deps =
    {[docs-base]deps}
    pyenchant
skip_install = true
commands = - sphinx-build -b spelling docs dist/docs

[testenv:docs]
description = build the documentation
deps = {[docs-base]deps}
skip_install = true
commands =
    sphinx-build {posargs:-E} -b doctest docs dist/docs
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

############## DEPLOY ##############

# usage 1
# deploy to testpypi while ignoring collisions (case where the version already exists on remote)
# python -m tox -c tox-dev.ini -e deploy-final

# usage 2
# deploy to pypi
# PYPI_SERVER=pypi python -m tox -c tox-dev.ini -e deploy-final

[testenv:deploy-final]
description = Deploy the python package to be hosted in a pypi server
deps =
    keyring==21.3.0
    twine
commands_pre =
    python setup.py sdist bdist_wheel
    python -m twine upload --non-interactive --repository {env:PYPI_SERVER:testpypi --skip-existing} dist/so[\-_]magic-{env:CURRENT_PACKAGE_VERSION}* --verbose

###### COVERAGE ######
[testenv:clean]
deps = coverage
skip_install = True
commands = coverage erase

[testenv:report]
deps = coverage
skip_install = True
commands = {posargs:coverage report}

[testenv:format-report]
deps = coverage
skip_install = True
commands =
    coverage xml
    coverage html


###### CODECOV ######
[testenv:codecov]
description = Send code coverage data to codecov.io
passenv = TOXENV CI TRAVIS TRAVIS_* CODECOV_* CIRCLECI CIRCLE_*
deps = codecov
skip_install = True
commands = codecov


###### PYDEPS ######
[testenv:graphs]
deps = pydeps
skip_install = True
passenv = HOME
commands =
    pydeps src/so_magic --max-bacon=2 --noshow -o {env:BUILD_ARTIFACTS_DIR}/so_magic_1.svg
    pydeps src/so_magic --max-bacon=4 --noshow -o {env:BUILD_ARTIFACTS_DIR}/so_magic_2.svg
    pydeps src/so_magic --max-bacon=6 --noshow -o {env:BUILD_ARTIFACTS_DIR}/so_magic_3.svg
    pydeps src/so_magic --max-bacon=8 --noshow -o {env:BUILD_ARTIFACTS_DIR}/so_magic_4.svg
    pydeps src/so_magic --noshow -o {env:BUILD_ARTIFACTS_DIR}/so_magic_5.svg

    pydeps src/so_magic/clustering --cluster --max-bacon=8 --noshow -o {env:BUILD_ARTIFACTS_DIR}/so_magic.clustering.svg
    pydeps src/so_magic/data --cluster --max-bacon=8 --noshow -o {env:BUILD_ARTIFACTS_DIR}/so_magic.data.svg
    pydeps src/so_magic/som --cluster --noshow -o {env:BUILD_ARTIFACTS_DIR}/so_magic.som.svg
    pydeps src/so_magic/utils --cluster --max-bacon=8 --noshow -o {env:BUILD_ARTIFACTS_DIR}/so_magic.utils.svg
